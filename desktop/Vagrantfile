# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/bionic64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
   config.vm.provider "virtualbox" do |vb|
     # Display the VirtualBox GUI when booting the machine
     vb.gui = true
  
     # Customize the amount of memory on the VM:
     vb.memory = "6144"
   end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
   config.vm.provision "shell", inline: <<-SHELL
     apt-get update
     apt-get -y upgrade
     apt-get install -y cmake
     apt-get install -y gcc
     apt-get install -y clang
     apt-get install -y gdb
     apt-get install -y build-essential
     apt-get install -y rsync
     apt-get install -y virtualbox-guest-dkms
     apt-get install -y virtualbox-guest-utils
     apt-get install -y ubuntu-gnome-desktop
   SHELL
end

# PREPARATION
# 1. Install VirtualBox
#    https://www.virtualbox.org/wiki/Downloads
# 2. Install Vagrant
#    https://www.vagrantup.com/downloads.html
# 3. (Windows) Install Git Bash
#    https://git-scm.com/downloads

# CERT ISSUES ON MAC
# Try to install, get the error, then
# System Preferences > Security & Privacy > Open Anyway

# BRING UP IN GIT BASH
# cd
# mkdir -p vagrant/ubuntu-bionic
# cd vagrant/ubuntu-bionic
# vagrant init ubuntu/bionic64
# curl https://raw.githubusercontent.com/patricia-gallardo/c_on_linux/master/desktop/Vagrantfile -O
# vagrant up
# vagrant ssh
# sudo adduser <username>
# vagrant halt
# vagrant up

# CLEANUP
# vagrant halt
# vagrant destroy

# TROUBLESHOOT
# vagrant provision

# RESIZE WINDOW
# View > Auto-resize Guest Display
